{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/jin_bye/client/src/SideBar/SideBar.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport { useEffect, useState } from \"react\";\nimport \"./styles/SideBar.scss\";\nimport { findImg } from '../Images/Images';\nimport UserInfoModal from \"./UserInfoModal\";\nimport GetChatList from './GetChatList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SideBar = () => {\n  _s();\n\n  const [MyID, setMyID] = useState('');\n  const [MyIcon, setMyIcon] = useState('');\n  useEffect(() => {\n    const id = sessionStorage.getItem('nickname');\n    const icon = sessionStorage.getItem('icon');\n    if (id) setMyID(id);\n    if (icon) setMyIcon(icon);\n  });\n\n  const fetcher = async url => {\n    if (MyID) {\n      const res = await axios.get(url);\n      return res.data;\n    }\n  };\n\n  const {\n    data,\n    error,\n    mutate\n  } = useSwr('/Lobby/userList?id=' + MyID, fetcher); //UserInfoModal\n\n  const [TargetID, setTargetID] = useState('');\n  const [UserInfoModalState, setUserInfoModalState] = useState(false);\n\n  const openUserInfoModal = async id => {\n    setUserInfoModalState(true);\n    setTargetID(id);\n  };\n\n  const closeUserInfoModal = () => {\n    setUserInfoModalState(false);\n    mutate();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"MyID\",\n        children: MyID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"myIcon\",\n        onClick: () => openUserInfoModal(MyID),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: findImg(MyIcon),\n          width: \"30\",\n          height: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"# friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }, this), data === null || data === void 0 ? void 0 : data.map(user => user.isFriend ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"user-btn\",\n          onClick: () => openUserInfoModal(user.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: findImg(user.icon),\n            width: \"20\",\n            height: \"20\",\n            className: \"user-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 6\n          }, this), user.state === \"on\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userState online\",\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this) : null, user.state === \"off\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userState offline\",\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 30\n          }, this) : null, user.state === \"gaming\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userState gaming\",\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this) : null, user.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this) : null), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"# others\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }, this), data === null || data === void 0 ? void 0 : data.map(user => user.isFriend ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"user-btn\",\n          onClick: () => openUserInfoModal(user.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: findImg(user.icon),\n            width: \"20\",\n            height: \"20\",\n            className: \"user-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 6\n          }, this), user.state === \"on\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userState online\",\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this) : null, user.state === \"off\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userState offline\",\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 30\n          }, this) : null, user.state === \"gaming\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userState gaming\",\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this) : null, user.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)), /*#__PURE__*/_jsxDEV(GetChatList, {\n        myID: MyID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(UserInfoModal, {\n        open: UserInfoModalState,\n        close: closeUserInfoModal,\n        myID: MyID,\n        targetID: TargetID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 2\n  }, this);\n};\n\n_s(SideBar, \"C6O2HWK4w2PKfn/AgEQKLrjaAZc=\", false, function () {\n  return [useSwr];\n});\n\n_c = SideBar;\nexport default SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/Users/jinkim/jin_bye/client/src/SideBar/SideBar.tsx"],"names":["axios","useSwr","useEffect","useState","findImg","UserInfoModal","GetChatList","SideBar","MyID","setMyID","MyIcon","setMyIcon","id","sessionStorage","getItem","icon","fetcher","url","res","get","data","error","mutate","TargetID","setTargetID","UserInfoModalState","setUserInfoModalState","openUserInfoModal","closeUserInfoModal","map","user","isFriend","state"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport useSwr from 'swr';\nimport {useEffect, useState} from \"react\";\nimport \"./styles/SideBar.scss\"\nimport {findImg} from '../Images/Images'\nimport UserInfoModal from \"./UserInfoModal\";\nimport GetChatList from './GetChatList'\n\nconst SideBar = () => {\n\tconst [MyID, setMyID] = useState('')\n\tconst [MyIcon, setMyIcon] = useState('')\n\t\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst icon = sessionStorage.getItem('icon')\n\t\tif (id) setMyID(id)\n\t\tif (icon) setMyIcon(icon)\n\t})\n\t\n\tconst fetcher = async (url:string) => {\n\t\tif (MyID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error, mutate} = useSwr<{id:string, icon:string, state:string, isFriend:boolean}[]>('/Lobby/userList?id=' + MyID, fetcher)\n\n\n\t//UserInfoModal\n\tconst [TargetID, setTargetID] = useState('');\n\tconst [UserInfoModalState, setUserInfoModalState] = useState(false);\n\tconst openUserInfoModal = async(id:string) => {\n\t\tsetUserInfoModalState(true);\n\t\tsetTargetID(id);\n\t}\n\tconst closeUserInfoModal = () => {\n\t\tsetUserInfoModalState(false);\n\t\tmutate()\n\t}\n\n\treturn(\n\t<aside>\n\t\t<div className=\"top\">\n\t\t\t<span className=\"MyID\">{MyID}</span>\n\t\t\t<button type=\"button\" className=\"myIcon\" onClick={() => openUserInfoModal(MyID)}>\n\t\t\t\t<img src={findImg(MyIcon)} width=\"30\" height=\"30\"></img>\n\t\t\t</button>\n\t\t</div>\n\t\t<div className=\"bottom\">\n\t\t\t<div className=\"title\"># friends</div>\n\t\t\t{data?.map(user=> user.isFriend ?\n\t\t\t\t<div>\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"on\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"off\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t: null\n\t\t\t)}\n\t\t\t<div className=\"title\"># others</div>\n\t\t\t{data?.map(user => user.isFriend ? null :\n\t\t\t\t<div>\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"on\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"off\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t\n\t\t\t<GetChatList myID={MyID}/>\n\n\t\t\t<UserInfoModal open={UserInfoModalState} close={closeUserInfoModal} myID={MyID} targetID={TargetID}/>\n\t\t</div>\n\t</aside>\n\t)\n}\nexport default SideBar;"]},"metadata":{},"sourceType":"module"}