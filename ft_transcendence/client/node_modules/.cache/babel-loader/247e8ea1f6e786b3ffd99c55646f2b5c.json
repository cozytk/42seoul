{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/jin_bye/client/src/Auth/Auth.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport './styles/Auth.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [IntraID, setIntraID] = useState('');\n  const [AuthCode, setAuthCode] = useState('');\n  useEffect(() => {\n    const url = window.location.href.split('?');\n\n    if (url[1]) {\n      const intra_id = url[1].split('=');\n\n      if (intra_id[0] === 'intra_id') {\n        setIntraID(intra_id[1]);\n        sessionStorage.setItem('intraID', intra_id[1]);\n      }\n    }\n  });\n\n  const handleAuthCodeChange = e => {\n    setAuthCode(e.target.value);\n    console.log(e.target.value);\n  };\n\n  const authCheck = async () => {\n    await axios.post('/log/2-factor-auth', {\n      intra_id: IntraID,\n      auth_value: AuthCode\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-box\",\n    children: [IntraID, \"@student.42seoul.kr\\uB85C \\uBA54\\uC77C\\uC774 \\uBC1C\\uC1A1\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uC778\\uC99D \\uCF54\\uB4DC\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        onChange: handleAuthCodeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: authCheck,\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 2\n  }, this);\n};\n\n_s(Auth, \"2156ZYjlo8ZjSDt+mDFyz2MrOqA=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/jinkim/jin_bye/client/src/Auth/Auth.tsx"],"names":["axios","React","useEffect","useState","Auth","IntraID","setIntraID","AuthCode","setAuthCode","url","window","location","href","split","intra_id","sessionStorage","setItem","handleAuthCodeChange","e","target","value","console","log","authCheck","post","auth_value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMO,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,CAAZ;;AACA,QAAIJ,GAAG,CAAC,CAAD,CAAP,EACA;AACC,YAAMK,QAAQ,GAAGL,GAAG,CAAC,CAAD,CAAH,CAAOI,KAAP,CAAa,GAAb,CAAjB;;AACA,UAAIC,QAAQ,CAAC,CAAD,CAAR,KAAgB,UAApB,EACA;AACCR,QAAAA,UAAU,CAACQ,QAAQ,CAAC,CAAD,CAAT,CAAV;AACAC,QAAAA,cAAc,CAACC,OAAf,CAAuB,SAAvB,EAAkCF,QAAQ,CAAC,CAAD,CAA1C;AACA;AACD;AACD,GAXQ,CAAT;;AAaA,QAAMG,oBAAoB,GAAIC,CAAD,IAAW;AACvCV,IAAAA,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACC,MAAF,CAASC,KAArB;AACA,GAHD;;AAKA,QAAMG,SAAS,GAAG,YAAW;AAC5B,UAAMvB,KAAK,CAACwB,IAAN,CAAW,oBAAX,EAAiC;AACtCV,MAAAA,QAAQ,EAAET,OAD4B;AAEtCoB,MAAAA,UAAU,EAAElB;AAF0B,KAAjC,CAAN;AAIA,GALD;;AAQA,sBACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,eACEF,OADF,2GAEC;AAAA,8BACA;AAAO,QAAA,WAAW,EAAC,sEAAnB;AAAmC,QAAA,QAAQ,EAAEY;AAA7C;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAEM,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAUA,CAzCD;;GAAMnB,I;;KAAAA,I;AA2CN,eAAeA,IAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport './styles/Auth.scss'\n\nconst Auth = () => {\n\n\tconst [IntraID, setIntraID] = useState('')\n\tconst [AuthCode, setAuthCode] = useState('')\n\n\tuseEffect(() => {\n\t\tconst url = window.location.href.split('?')\n\t\tif (url[1])\n\t\t{\n\t\t\tconst intra_id = url[1].split('=')\n\t\t\tif (intra_id[0] === 'intra_id')\n\t\t\t{\n\t\t\t\tsetIntraID(intra_id[1])\n\t\t\t\tsessionStorage.setItem('intraID', intra_id[1])\n\t\t\t}\n\t\t}\n\t})\n\n\tconst handleAuthCodeChange = (e:any) => {\n\t\tsetAuthCode(e.target.value);\n\t\tconsole.log(e.target.value)\n\t};\n\n\tconst authCheck = async() => {\n\t\tawait axios.post('/log/2-factor-auth', {\n\t\t\tintra_id: IntraID,\n\t\t\tauth_value: AuthCode\n\t\t})\n\t}\n\t\n\n\treturn (\n\t<div className=\"auth-box\">\n\t\t{IntraID}@student.42seoul.kr로 메일이 발송되었습니다.\n\t\t<div>\n\t\t<input placeholder=\"인증 코드를 입력해주세요\" onChange={handleAuthCodeChange}/>\n\t\t<button onClick={authCheck}>확인</button>\n\t\t</div>\n\t</div>\n\t)\n\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}