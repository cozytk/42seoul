{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/jin_bye/client/src/Chat/Chat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ChatInput from \"./ChatInput\";\nimport ChatLog from \"./ChatLog\";\nimport Loading from \"./Loading\";\nimport UserList from \"./UserList\";\nimport SideBar from \"../SideBar/SideBar\";\nimport \"./styles/Chat.scss\";\nimport setting from '../Images/setting.png';\nimport ChatSettingModal from \"./ChatSettingModal\";\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst socketIOClient = require('socket.io-client');\n\nconst Chat = () => {\n  _s();\n\n  const currentSocket = socketIOClient('http://localhost:8080');\n  const [MyID, setMyID] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [MyPermission, setMyPermission] = useState('');\n\n  const fetcher = async url => {\n    if (roomName) {\n      const res = await axios.get(url);\n      res.data.users = userSorting(res.data.users);\n      return res.data;\n    }\n  };\n\n  const {\n    data,\n    error,\n    mutate\n  } = useSwr('/Chat/info?title=' + roomName, fetcher);\n\n  function userSorting(userList) {\n    var rtn = [];\n    var admin = [];\n    var user = [];\n\n    for (let i = 0; i < userList.length; i++) {\n      if (userList[i].id === MyID) setMyPermission(userList[i].permission);\n      if (userList[i].permission === 'owner') rtn.push(userList[i]);else if (userList[i].permission === 'admin') admin.push(userList[i]);else user.push(userList[i]);\n    }\n\n    admin.forEach(ele => rtn.push(ele));\n    user.forEach(ele => rtn.push(ele));\n    return rtn;\n  }\n\n  useEffect(() => {\n    //setCurrentSocket(socketIOClient());\n    const id = sessionStorage.getItem('nickname');\n    const room = sessionStorage.getItem('roomName');\n    if (id) setMyID(id);\n    if (room) setRoomName(room);\n  });\n  const myInfo = {\n    roomName: roomName,\n    userName: MyID\n  };\n\n  if (currentSocket) {\n    currentSocket.on(\"connect\", () => {\n      currentSocket.emit(\"join\", myInfo);\n    });\n  } //chat owner modal\n\n\n  const [ChatSettingModalState, setChatSettingModalState] = useState(false);\n\n  const openChatSettingModal = () => {\n    setChatSettingModalState(true);\n  };\n\n  const closeChatSettingModal = () => {\n    setChatSettingModalState(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"App-Container\",\n    children: currentSocket ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"App-Left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chat-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"RoomInfo-num\",\n              children: data === null || data === void 0 ? void 0 : data.num\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: roomName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 5\n            }, this), MyPermission !== 'user' ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"setting-btn\",\n              onClick: openChatSettingModal,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: setting,\n                width: \"30\",\n                height: \"30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 6\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(ChatSettingModal, {\n            open: ChatSettingModalState,\n            close: closeChatSettingModal,\n            chatRoomID: roomName,\n            MyPermission: MyPermission\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"left-chatLog\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chatLog-top\",\n                children: /*#__PURE__*/_jsxDEV(ChatLog, {\n                  socket: currentSocket,\n                  MyID: MyID,\n                  roomName: roomName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 6\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chatLog-bottom\",\n                children: /*#__PURE__*/_jsxDEV(ChatInput, {\n                  socket: currentSocket\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 6\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"right-chatUser\",\n              children: /*#__PURE__*/_jsxDEV(UserList, {\n                socket: currentSocket,\n                users: data === null || data === void 0 ? void 0 : data.users,\n                MyPermission: MyPermission,\n                getRoomInfoMutate: mutate,\n                roomName: roomName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 6\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"App-Right\",\n        children: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 2\n  }, this);\n};\n\n_s(Chat, \"Cq3BgFXou8baq3N4VKcsPeVNEdA=\", false, function () {\n  return [useSwr];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/jinkim/jin_bye/client/src/Chat/Chat.tsx"],"names":["React","useEffect","useState","ChatInput","ChatLog","Loading","UserList","SideBar","setting","ChatSettingModal","axios","useSwr","socketIOClient","require","Chat","currentSocket","MyID","setMyID","roomName","setRoomName","MyPermission","setMyPermission","fetcher","url","res","get","data","users","userSorting","error","mutate","userList","rtn","admin","user","i","length","id","permission","push","forEach","ele","sessionStorage","getItem","room","myInfo","userName","on","emit","ChatSettingModalState","setChatSettingModalState","openChatSettingModal","closeChatSettingModal","num"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ChatInput from \"./ChatInput\";\nimport ChatLog from \"./ChatLog\";\nimport Loading from \"./Loading\";\nimport UserList from \"./UserList\";\nimport SideBar from \"../SideBar/SideBar\";\nimport \"./styles/Chat.scss\"\nimport setting from '../Images/setting.png'\nimport ChatSettingModal from \"./ChatSettingModal\";\nimport axios from \"axios\";\nimport useSwr from 'swr';\nconst socketIOClient = require('socket.io-client')\n\nconst Chat = () => {\n\t\n\tinterface Iuser{\n\t\tid:string,\n\t\tpermission:string,\n\t\ticon:string\n\t}\n\tconst currentSocket = socketIOClient('http://localhost:8080')\n\tconst [MyID, setMyID] = useState('')\n\tconst [roomName, setRoomName] = useState('')\n\tconst [MyPermission, setMyPermission] = useState('')\n\n\tconst fetcher = async (url:string) => {\n\t\tif (roomName)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\tres.data.users = userSorting(res.data.users)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\tconst {data, error, mutate} = useSwr<{num:string, security: string, users:Iuser[]}>('/Chat/info?title=' + roomName, fetcher)\n\n\tfunction userSorting(userList:Iuser[])\n\t{\n\t\tvar rtn: Iuser[] = []\n\t\tvar admin: Iuser[] = []\n\t\tvar user: Iuser[] = []\n\n\t\tfor(let i = 0; i < userList.length; i++)\n\t\t{\n\t\t\tif (userList[i].id === MyID)\n\t\t\t\tsetMyPermission(userList[i].permission)\n\t\t\t\n\t\t\tif (userList[i].permission === 'owner')\n\t\t\t\trtn.push(userList[i])\n\t\t\telse if (userList[i].permission === 'admin')\n\t\t\t\tadmin.push(userList[i])\n\t\t\telse\n\t\t\t\tuser.push(userList[i])\n\t\t}\n\t\t\n\t\tadmin.forEach(ele => rtn.push(ele))\n\t\tuser.forEach(ele => rtn.push(ele))\n\t\treturn rtn\n\t}\n\n\tuseEffect(() => {\n\t\t//setCurrentSocket(socketIOClient());\n\t\t\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst room = sessionStorage.getItem('roomName')\n\t\tif (id) setMyID(id)\n\t\tif (room) setRoomName(room)\n\t});\n\t\n\tconst myInfo = {\n\t\troomName: roomName,\n\t\tuserName: MyID,\n\t};\n\n\tif (currentSocket) {\n\t\tcurrentSocket.on(\"connect\", () => {\n\t\t\tcurrentSocket.emit(\"join\", myInfo);\n\t\t});\n\t}\n\n\t\n\n\t//chat owner modal\n\tconst [ChatSettingModalState, setChatSettingModalState] = useState(false);\n\tconst openChatSettingModal = () => {\n\t\tsetChatSettingModalState(true);\n\t}\n\tconst closeChatSettingModal = () => {\n\t\tsetChatSettingModalState(false);\n\t}\n\n\treturn (\n\t<div id=\"App-Container\">\n\t\t{currentSocket ? (\n\t\t<>\n\t\t<span className=\"App-Left\">\n\t\t\t<div id=\"chat-container\">\n\t\t\t<div className=\"chat-top\">\n\t\t\t\t<span className=\"RoomInfo-num\">{data?.num}</span>\n\t\t\t\t<span>{roomName}</span>\n\t\t\t\t{MyPermission !== 'user' ? \n\t\t\t\t\t<button className=\"setting-btn\" onClick={openChatSettingModal}>\n\t\t\t\t\t\t<img src={setting} width=\"30\" height=\"30\"></img>\n\t\t\t\t\t</button>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<ChatSettingModal open={ChatSettingModalState} close={closeChatSettingModal} chatRoomID={roomName} MyPermission={MyPermission}></ChatSettingModal>\n\t\t\t<div className=\"chat-bottom\">\n\t\t\t\t<span className=\"left-chatLog\">\n\t\t\t\t\t<div className=\"chatLog-top\">\n\t\t\t\t\t\t<ChatLog socket={currentSocket} MyID={MyID} roomName={roomName}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"chatLog-bottom\">\n\t\t\t\t\t\t<ChatInput socket={currentSocket}/>\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"right-chatUser\">\n\t\t\t\t\t<UserList socket={currentSocket} users={data?.users} MyPermission={MyPermission} getRoomInfoMutate={mutate} roomName={roomName}></UserList>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</span>\n\t\t<span className=\"App-Right\">\n\t\t\t\t<SideBar />\n\t\t</span>\n\t\t</>\n\t\t) : (\n\t\t  <Loading></Loading>\n\t\t)}\n\t</div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}