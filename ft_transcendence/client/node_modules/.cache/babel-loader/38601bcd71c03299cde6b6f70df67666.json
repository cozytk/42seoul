{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/jin_bye/client/src/Lobby/PwdCheckModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PwdCheckModal = props => {\n  _s();\n\n  const {\n    open,\n    close,\n    chatRoomID,\n    MyID\n  } = props;\n  const [PWD, setPWD] = useState(\"\");\n  const [WorngPWD, setWrongPWD] = useState(false);\n  const handelPWD = useCallback(e => {\n    setPWD(e.target.value);\n  }, []);\n\n  async function confirmPWD() {\n    axios.post('/Lobby/enter', {\n      title: chatRoomID,\n      id: MyID,\n      password: PWD\n    }).then(res => {\n      document.location.href = '/Chat';\n      sessionStorage.setItem('roomName', chatRoomID);\n    }).catch(err => {\n      setWrongPWD(true);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: open ? 'openModal Modal' : 'Modal',\n    children: open ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [\"Enter Password\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close\",\n          onClick: () => {\n            close();\n            setWrongPWD(false);\n          },\n          children: \" \\xD7 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [\"password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handelPWD\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), WorngPWD ? /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"error\",\n          children: \"\\uD2C0\\uB9B0 \\uBE44\\uBC00\\uBC88\\uD638\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn-primary\",\n          onClick: confirmPWD,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PwdCheckModal, \"l/UExLWRSYB1Y/asfp78j89770o=\");\n\n_c = PwdCheckModal;\nexport default PwdCheckModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PwdCheckModal\");","map":{"version":3,"sources":["/Users/jinkim/jin_bye/client/src/Lobby/PwdCheckModal.tsx"],"names":["React","useState","useCallback","axios","PwdCheckModal","props","open","close","chatRoomID","MyID","PWD","setPWD","WorngPWD","setWrongPWD","handelPWD","e","target","value","confirmPWD","post","title","id","password","then","res","document","location","href","sessionStorage","setItem","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;;;AAEA,MAAMC,aAAa,GAAKC,KAAF,IAAkB;AAAA;;AACvC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA;AAA3B,MAAmCJ,KAAzC;AAEA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMa,SAAS,GAAGZ,WAAW,CAAEa,CAAD,IAAW;AACxCJ,IAAAA,MAAM,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACA,GAF4B,EAE1B,EAF0B,CAA7B;;AAIA,iBAAeC,UAAf,GAA2B;AAC1Bf,IAAAA,KAAK,CAACgB,IAAN,CAAW,cAAX,EAA2B;AAACC,MAAAA,KAAK,EAACZ,UAAP;AAAmBa,MAAAA,EAAE,EAACZ,IAAtB;AAA4Ba,MAAAA,QAAQ,EAACZ;AAArC,KAA3B,EACCa,IADD,CACOC,GAAD,IAAS;AACdC,MAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,OAAzB;AACAC,MAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCrB,UAAnC;AACA,KAJD,EAKCsB,KALD,CAKQC,GAAD,IAAS;AACflB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA,KAPD;AAQA;;AAED,sBACC;AAAK,IAAA,SAAS,EAAGP,IAAI,GAAG,iBAAH,GAAuB,OAA5C;AAAA,cACGA,IAAI,gBACL;AAAA,8BACC;AAAA,kDAEC;AAAQ,UAAA,SAAS,EAAC,OAAlB;AAA0B,UAAA,OAAO,EAAE,MAAM;AACxCC,YAAAA,KAAK;AACLM,YAAAA,WAAW,CAAC,KAAD,CAAX;AACA,WAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAQC;AAAA,8CACW;AAAO,UAAA,QAAQ,EAAEC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADX,EAEEF,QAAQ,gBAAG;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAkD,IAF5D;AAAA;AAAA;AAAA;AAAA;AAAA,cARD,eAYC;AAAA,+BACC;AAAG,UAAA,SAAS,EAAC,iBAAb;AAA+B,UAAA,OAAO,EAAEM,UAAxC;AAAA,iCAAoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAZD;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,GAiBF;AAlBL;AAAA;AAAA;AAAA;AAAA,UADD;AAsBA,CA3CD;;GAAMd,a;;KAAAA,a;AA6CN,eAAeA,aAAf","sourcesContent":["import React, {useState, useCallback, useEffect} from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\n\nconst PwdCheckModal = ( props: any ) => {\n\tconst { open, close, chatRoomID, MyID} = props;\n\n\tconst [PWD, setPWD] = useState(\"\");\n\tconst [WorngPWD, setWrongPWD] = useState(false)\n\n\tconst handelPWD = useCallback((e:any) => {\n\t\tsetPWD(e.target.value)\n\t}, []);\n\n\tasync function confirmPWD(){\n\t\taxios.post('/Lobby/enter', {title:chatRoomID, id:MyID, password:PWD})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/Chat';\n\t\t\tsessionStorage.setItem('roomName', chatRoomID)\n\t\t})\n\t\t.catch((err) => {\n\t\t\tsetWrongPWD(true)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tEnter Password\n\t\t\t\t\t\t<button className=\"close\" onClick={() => {\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\tsetWrongPWD(false)\n\t\t\t\t\t\t}}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\tpassword: <input onChange={handelPWD}></input>\n\t\t\t\t\t\t{WorngPWD ? <label className=\"error\">틀린 비밀번호입니다.</label> : null}\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={confirmPWD}><b>Enter</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default PwdCheckModal"]},"metadata":{},"sourceType":"module"}