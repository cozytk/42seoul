{"ast":null,"code":"var _jsxFileName = \"/Users/sohndohyun/works/transcendence/client/src/Lobby/ChatListModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport './styles/Modal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatListModal = props => {\n  _s();\n\n  const {\n    open,\n    close,\n    MyID\n  } = props;\n  const [NewRoomName, setNewRoomName] = useState('');\n  const [RoomPWD, setRoomPWD] = useState('');\n  const [IsProtectedRoom, setIsProtectedRoom] = useState(false);\n  const [IsUniqueName, setIsUniqueName] = useState(true);\n  const handleRoomNameChange = useCallback(e => {\n    setNewRoomName(e.target.value);\n  }, []);\n  const handelRoomPWD = useCallback(e => {\n    setRoomPWD(e.target.value);\n  }, []);\n  const ProtectedRoomCheckHandler = useCallback(e => {\n    setRoomPWD('');\n    setIsProtectedRoom(!IsProtectedRoom);\n  }, [IsProtectedRoom]);\n\n  async function makeNewChat() {\n    if (RoomPWD === '') var security = 'public';else var security = 'protected';\n    await axios.post('/Lobby/chatCreate', {\n      title: NewRoomName,\n      password: RoomPWD,\n      owner_id: MyID,\n      security: security\n    }).then(res => {\n      document.location.href = '/chat';\n      sessionStorage.setItem('roomName', NewRoomName);\n    }).catch(err => {\n      setIsUniqueName(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: open ? 'openModal Modal' : 'Modal',\n    children: open ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [\"New Chatting Room\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close\",\n          onClick: close,\n          children: [' ', \"\\xD7\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Room Name:\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleRoomNameChange,\n            maxLength: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: IsProtectedRoom,\n            onChange: e => ProtectedRoomCheckHandler(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), ' ', \"protected\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), IsUniqueName ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"error\",\n          children: \"\\uC720\\uD6A8\\uD558\\uC9C0 \\uC54A\\uC740 \\uAC12\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), IsProtectedRoom ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-pwd\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"password:\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: handelRoomPWD\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn-primary\",\n          onClick: makeNewChat,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatListModal, \"yOLvnfQk/FFpSXluGHkehZMIsdI=\");\n\n_c = ChatListModal;\nexport default ChatListModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatListModal\");","map":{"version":3,"sources":["/Users/sohndohyun/works/transcendence/client/src/Lobby/ChatListModal.tsx"],"names":["React","useState","useCallback","axios","ChatListModal","props","open","close","MyID","NewRoomName","setNewRoomName","RoomPWD","setRoomPWD","IsProtectedRoom","setIsProtectedRoom","IsUniqueName","setIsUniqueName","handleRoomNameChange","e","target","value","handelRoomPWD","ProtectedRoomCheckHandler","makeNewChat","security","post","title","password","owner_id","then","res","document","location","href","sessionStorage","setItem","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport './styles/Modal.scss';\n\nconst ChatListModal = (props: any) => {\n  const { open, close, MyID } = props;\n\n  const [NewRoomName, setNewRoomName] = useState('');\n  const [RoomPWD, setRoomPWD] = useState('');\n  const [IsProtectedRoom, setIsProtectedRoom] = useState(false);\n  const [IsUniqueName, setIsUniqueName] = useState(true);\n\n  const handleRoomNameChange = useCallback((e: any) => {\n    setNewRoomName(e.target.value);\n  }, []);\n  const handelRoomPWD = useCallback((e: any) => {\n    setRoomPWD(e.target.value);\n  }, []);\n\n  const ProtectedRoomCheckHandler = useCallback(\n    (e: any) => {\n      setRoomPWD('');\n      setIsProtectedRoom(!IsProtectedRoom);\n    },\n    [IsProtectedRoom],\n  );\n\n  async function makeNewChat() {\n    if (RoomPWD === '') var security = 'public';\n    else var security = 'protected';\n    await axios\n      .post('/Lobby/chatCreate', {\n        title: NewRoomName,\n        password: RoomPWD,\n        owner_id: MyID,\n        security: security,\n      })\n      .then((res) => {\n        document.location.href = '/chat';\n        sessionStorage.setItem('roomName', NewRoomName);\n      })\n      .catch((err) => {\n        setIsUniqueName(false);\n      });\n  }\n\n  return (\n    <div className={open ? 'openModal Modal' : 'Modal'}>\n      {open ? (\n        <section>\n          <header>\n            New Chatting Room\n            <button className=\"close\" onClick={close}>\n              {' '}\n              &times;{' '}\n            </button>\n          </header>\n          <main>\n            <label>\n              <b>Room Name:&nbsp;</b>\n              <input onChange={handleRoomNameChange} maxLength={20}></input>\n            </label>\n            <label>\n              &nbsp;&nbsp;\n              <input\n                type=\"checkbox\"\n                checked={IsProtectedRoom}\n                onChange={(e) => ProtectedRoomCheckHandler(e)}\n              ></input>{' '}\n              protected\n            </label>\n            {IsUniqueName ? null : (\n              <label className=\"error\">유효하지 않은 값입니다.</label>\n            )}\n            {IsProtectedRoom ? (\n              <div className=\"checkbox-pwd\">\n                <b>password:&nbsp;</b>\n                <input type=\"password\" onChange={handelRoomPWD}></input>\n              </div>\n            ) : null}\n          </main>\n          <footer>\n            <a className=\"btn btn-primary\" onClick={makeNewChat}>\n              <b>Enter</b>\n            </a>\n          </footer>\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ChatListModal;\n"]},"metadata":{},"sourceType":"module"}