{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/bye_blackhole/client/src/Lobby/ChatListModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatListModal = props => {\n  _s();\n\n  const {\n    open,\n    close,\n    MyID\n  } = props;\n  const [NewRoomName, setNewRoomName] = useState(\"\");\n  const [RoomPWD, setRoomPWD] = useState(\"\");\n  const [IsProtectedRoom, setIsProtectedRoom] = useState(false);\n  const [IsUniqueName, setIsUniqueName] = useState(true);\n  const handleRoomNameChange = useCallback(e => {\n    setNewRoomName(e.target.value);\n  }, []);\n  const handelRoomPWD = useCallback(e => {\n    setRoomPWD(e.target.value);\n    console.log(RoomPWD);\n  }, []);\n  const ProtectedRoomCheckHandler = useCallback(e => {\n    setIsProtectedRoom(!IsProtectedRoom);\n  }, [IsProtectedRoom]);\n\n  function makeNewChat() {\n    if (RoomPWD === '') var security = 'public';else var security = 'protected';\n    console.log(RoomPWD);\n    axios.put('/Lobby/chatCreate/' + NewRoomName, {\n      password: RoomPWD,\n      owner_id: MyID,\n      security: security\n    }).then(res => {\n      document.location.href = '/chat';\n      sessionStorage.setItem('roomName', NewRoomName);\n    }).catch(err => {\n      setIsUniqueName(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: open ? 'openModal Modal' : 'Modal',\n    children: open ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [\"New Chatting Room\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close\",\n          onClick: close,\n          children: \" \\xD7 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Room Name:\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleRoomNameChange,\n            maxLength: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: IsProtectedRoom,\n            onChange: e => ProtectedRoomCheckHandler(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 20\n          }, this), \" protected\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), IsUniqueName ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"error\",\n          children: \"\\uC774\\uBBF8 \\uC874\\uC7AC\\uD558\\uB294 \\uBC29\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 30\n        }, this), IsProtectedRoom ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-pwd\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"\\xA0\\xA0\\xA0\\xA0password:\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: handelRoomPWD\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 8\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn-primary\",\n          onClick: makeNewChat,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ChatListModal, \"Uan6uCatiHwNJPYMIpZqkvFc4gM=\");\n\n_c = ChatListModal;\nexport default ChatListModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatListModal\");","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/client/src/Lobby/ChatListModal.tsx"],"names":["React","useState","useCallback","axios","ChatListModal","props","open","close","MyID","NewRoomName","setNewRoomName","RoomPWD","setRoomPWD","IsProtectedRoom","setIsProtectedRoom","IsUniqueName","setIsUniqueName","handleRoomNameChange","e","target","value","handelRoomPWD","console","log","ProtectedRoomCheckHandler","makeNewChat","security","put","password","owner_id","then","res","document","location","href","sessionStorage","setItem","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;;;AAEA,MAAMC,aAAa,GAAKC,KAAF,IAAkB;AAAA;;AACvC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAAuBH,KAA7B;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,IAAD,CAAhD;AAGA,QAAMgB,oBAAoB,GAAGf,WAAW,CAAEgB,CAAD,IAAW;AACnDR,IAAAA,cAAc,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACA,GAFuC,EAErC,EAFqC,CAAxC;AAGA,QAAMC,aAAa,GAAGnB,WAAW,CAAEgB,CAAD,IAAW;AAC5CN,IAAAA,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACA,GAHgC,EAG9B,EAH8B,CAAjC;AAKA,QAAMa,yBAAyB,GAAGtB,WAAW,CAAGgB,CAAD,IAAW;AACzDJ,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACA,GAF4C,EAE3C,CAACA,eAAD,CAF2C,CAA7C;;AAKA,WAASY,WAAT,GAAsB;AACrB,QAAId,OAAO,KAAK,EAAhB,EACC,IAAIe,QAAQ,GAAG,QAAf,CADD,KAGC,IAAIA,QAAQ,GAAG,WAAf;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACAR,IAAAA,KAAK,CAACwB,GAAN,CAAU,uBAAuBlB,WAAjC,EAA8C;AAACmB,MAAAA,QAAQ,EAACjB,OAAV;AAAmBkB,MAAAA,QAAQ,EAACrB,IAA5B;AAAkCkB,MAAAA,QAAQ,EAACA;AAA3C,KAA9C,EACCI,IADD,CACOC,GAAD,IAAS;AACdC,MAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,OAAzB;AACAC,MAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmC3B,WAAnC;AACA,KAJD,EAKC4B,KALD,CAKQC,GAAD,IAAS;AACftB,MAAAA,eAAe,CAAC,KAAD,CAAf;AACA,KAPD;AAQA;;AAED,sBACC;AAAK,IAAA,SAAS,EAAGV,IAAI,GAAG,iBAAH,GAAuB,OAA5C;AAAA,cACGA,IAAI,gBACL;AAAA,8BACC;AAAA,qDAEC;AAAQ,UAAA,SAAS,EAAC,OAAlB;AAA0B,UAAA,OAAO,EAAEC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAKC;AAAA,gCACC;AAAA,kCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAO,YAAA,QAAQ,EAAEU,oBAAjB;AAAuC,YAAA,SAAS,EAAE;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAKC;AAAA,8CACa;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAEJ,eAAhC;AAAiD,YAAA,QAAQ,EAAGK,CAAD,IAAOM,yBAAyB,CAACN,CAAD;AAA3F;AAAA;AAAA;AAAA;AAAA,kBADb;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,EAQEH,YAAY,GAAG,IAAH,gBAAU;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARxB,EASEF,eAAe,gBACf;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,QAAQ,EAAEQ;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADe,GAKb,IAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,eAsBC;AAAA,+BACC;AAAG,UAAA,SAAS,EAAC,iBAAb;AAA+B,UAAA,OAAO,EAAEI,WAAxC;AAAA,iCAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAtBD;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,GA2BF;AA5BL;AAAA;AAAA;AAAA;AAAA,UADD;AAgCA,CAtED;;GAAMrB,a;;KAAAA,a;AAwEN,eAAeA,aAAf","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\n\nconst ChatListModal = ( props: any ) => {\n\tconst { open, close, MyID} = props;\n\n\tconst [NewRoomName, setNewRoomName] = useState(\"\");\n\tconst [RoomPWD, setRoomPWD] = useState(\"\");\n\tconst [IsProtectedRoom, setIsProtectedRoom] = useState(false);\n\tconst [IsUniqueName, setIsUniqueName] = useState(true)\n\n\n\tconst handleRoomNameChange = useCallback((e:any) => {\n\t\tsetNewRoomName(e.target.value);\n\t}, []);\n\tconst handelRoomPWD = useCallback((e:any) => {\n\t\tsetRoomPWD(e.target.value)\n\t\tconsole.log(RoomPWD)\n\t}, []);\n\n\tconst ProtectedRoomCheckHandler = useCallback( (e:any) => {\n\t\tsetIsProtectedRoom(!IsProtectedRoom);\n\t},[IsProtectedRoom]);\n\n\n\tfunction makeNewChat(){\n\t\tif (RoomPWD === '')\n\t\t\tvar security = 'public'\n\t\telse\n\t\t\tvar security = 'protected'\n\t\tconsole.log(RoomPWD)\n\t\taxios.put('/Lobby/chatCreate/' + NewRoomName, {password:RoomPWD, owner_id:MyID, security:security})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/chat'\n\t\t\tsessionStorage.setItem('roomName', NewRoomName)\n\t\t})\n\t\t.catch((err) => {\n\t\t\tsetIsUniqueName(false)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tNew Chatting Room\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<label >\n\t\t\t\t\t\t\t<b>Room Name:&nbsp;</b>\n\t\t\t\t\t\t\t<input onChange={handleRoomNameChange} maxLength={20}></input>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t&nbsp;&nbsp;<input type=\"checkbox\" checked={IsProtectedRoom} onChange={(e) => ProtectedRoomCheckHandler(e)}></input> protected\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t{IsUniqueName ? null : <label className=\"error\">이미 존재하는 방입니다.</label>}\n\t\t\t\t\t\t{IsProtectedRoom ?\n\t\t\t\t\t\t\t<div className=\"checkbox-pwd\">\n\t\t\t\t\t\t\t<b>&nbsp;&nbsp;&nbsp;&nbsp;password:&nbsp;</b>\n\t\t\t\t\t\t\t<input type=\"password\" onChange={handelRoomPWD}></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={makeNewChat}><b>Enter</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default ChatListModal"]},"metadata":{},"sourceType":"module"}