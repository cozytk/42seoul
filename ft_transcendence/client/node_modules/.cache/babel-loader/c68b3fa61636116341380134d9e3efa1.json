{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/bye_blackhole/client/src/Chat/ChatInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./styles/ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst socketIOClient = require('socket.io-client'); //const ChatInput = ({ userName, socket }: any) => {\n\n\nconst ChatInput = () => {\n  _s();\n\n  const [chatMessage, setChatMessage] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    socket.emit(\"onSend\", {\n      userName: userName ? userName : sessionStorage.getItem(\"userName\"),\n      msg: chatMessage,\n      timeStamp: new Date().toLocaleTimeString()\n    });\n    setChatMessage(\"\");\n  };\n\n  const onChatMessageChange = e => {\n    setChatMessage(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ChatInput-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Enter message\",\n        value: chatMessage,\n        onChange: onChatMessageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        className: \"btn btn-sm\",\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatInput, \"HzBHO9DpNxPM+oxUPEU4BWcU80k=\");\n\n_c = ChatInput;\nexport default ChatInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/client/src/Chat/ChatInput.tsx"],"names":["React","useState","Button","socketIOClient","require","ChatInput","chatMessage","setChatMessage","handleSubmit","e","preventDefault","socket","emit","userName","sessionStorage","getItem","msg","timeStamp","Date","toLocaleTimeString","onChatMessageChange","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAO,wBAAP;AACA,OAAO,sCAAP;AACA,SAAQC,MAAR,QAAqB,iBAArB;;;AAEA,MAAMC,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA9B,C,CAGA;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAW;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAsB;AACpBC,MAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAH,GAAcC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CADZ;AAEpBC,MAAAA,GAAG,EAAEV,WAFe;AAGpBW,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,kBAAX;AAHS,KAAtB;AAKAZ,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GARD;;AAUA,QAAMa,mBAAmB,GAAIX,CAAD,IAAW;AACrCF,IAAAA,cAAc,CAACE,CAAC,CAACY,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,QAAQ,EAAEd,YAA3C;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AACE,QAAA,WAAW,EAAC,eADd;AAEE,QAAA,KAAK,EAAEF,WAFT;AAGE,QAAA,QAAQ,EAAEc;AAHZ;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA7BD;;GAAMf,S;;KAAAA,S;AA+BN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./styles/ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button} from \"react-bootstrap\";\n\nconst socketIOClient = require('socket.io-client')\n\n\n//const ChatInput = ({ userName, socket }: any) => {\nconst ChatInput = () => {\n  const [chatMessage, setChatMessage] = useState(\"\");\n\n  const handleSubmit = (e:any) => {\n    e.preventDefault();\n    socket.emit(\"onSend\", {\n      userName: userName ? userName : sessionStorage.getItem(\"userName\"),\n      msg: chatMessage,\n      timeStamp: new Date().toLocaleTimeString(),\n    });\n    setChatMessage(\"\");\n  };\n\n  const onChatMessageChange = (e:any) => {\n    setChatMessage(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className=\"ChatInput-form\" onSubmit={handleSubmit}>\n        <input type=\"text\" className=\"form-control\"\n          placeholder=\"Enter message\"\n          value={chatMessage}\n          onChange={onChatMessageChange}\n        ></input>\n        <Button type=\"button\" className=\"btn btn-sm\">send</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatInput;"]},"metadata":{},"sourceType":"module"}