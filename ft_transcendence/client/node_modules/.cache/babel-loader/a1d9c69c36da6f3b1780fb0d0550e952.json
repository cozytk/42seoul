{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/jin_bye/client/src/Chat/ChatInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatInput = ({\n  socket\n}) => {\n  _s();\n\n  const [chatMessage, setChatMessage] = useState(\"\");\n  const [MyID, setMyID] = useState('');\n  const [roomName, setRoomName] = useState('');\n  useEffect(() => {\n    const id = sessionStorage.getItem('nickname');\n    const room = sessionStorage.getItem('roomName');\n    if (id) setMyID(id);\n    if (room) setRoomName(room);\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    socket.emit(\"onSend\", {\n      title: roomName,\n      nickname: MyID,\n      msg: chatMessage,\n      date: new Date().toLocaleTimeString()\n    });\n    setChatMessage(\"\");\n  };\n\n  const onChatMessageChange = e => {\n    setChatMessage(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ChatInput-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Enter message\",\n        value: chatMessage,\n        onChange: onChatMessageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        className: \"btn btn-sm\",\n        onClick: handleSubmit,\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatInput, \"QT7Ui/Y2DMCmRBXvR9Ul8INdxro=\");\n\n_c = ChatInput;\nexport default ChatInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"sources":["/Users/jinkim/jin_bye/client/src/Chat/ChatInput.tsx"],"names":["React","useEffect","useState","Button","ChatInput","socket","chatMessage","setChatMessage","MyID","setMyID","roomName","setRoomName","id","sessionStorage","getItem","room","handleSubmit","e","preventDefault","emit","title","nickname","msg","date","Date","toLocaleTimeString","onChatMessageChange","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAO,wBAAP;AACA,OAAO,sCAAP;AACA,SAAQC,MAAR,QAAqB,iBAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAAA;;AACpC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMW,EAAE,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX;AACA,UAAMC,IAAI,GAAGF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAb;AACA,QAAIF,EAAJ,EAAQH,OAAO,CAACG,EAAD,CAAP;AACR,QAAIG,IAAJ,EAAUJ,WAAW,CAACI,IAAD,CAAX;AACV,GALQ,CAAT;;AAOA,QAAMC,YAAY,GAAIC,CAAD,IAAW;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,MAAM,CAACc,IAAP,CAAY,QAAZ,EAAsB;AACrBC,MAAAA,KAAK,EAAEV,QADc;AAErBW,MAAAA,QAAQ,EAAEb,IAFW;AAGrBc,MAAAA,GAAG,EAAEhB,WAHgB;AAIrBiB,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,kBAAX;AAJe,KAAtB;AAMAlB,IAAAA,cAAc,CAAC,EAAD,CAAd;AACA,GATD;;AAWC,QAAMmB,mBAAmB,GAAIT,CAAD,IAAW;AACrCV,IAAAA,cAAc,CAACU,CAAC,CAACU,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,QAAQ,EAAEZ,YAA3C;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AACE,QAAA,WAAW,EAAC,eADd;AAEE,QAAA,KAAK,EAAEV,WAFT;AAGE,QAAA,QAAQ,EAAEoB;AAHZ;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAA6C,QAAA,OAAO,EAAEV,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvCD;;GAAMZ,S;;KAAAA,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./styles/ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button} from \"react-bootstrap\";\n\nconst ChatInput = ({socket}: any) => {\n\tconst [chatMessage, setChatMessage] = useState(\"\");\n\tconst [MyID, setMyID] = useState('')\n\tconst [roomName, setRoomName] = useState('')\n\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst room = sessionStorage.getItem('roomName')\n\t\tif (id) setMyID(id)\n\t\tif (room) setRoomName(room)\n\t})\n\n\tconst handleSubmit = (e:any) => {\n\t\te.preventDefault();\n\t\tsocket.emit(\"onSend\", {\n\t\t\ttitle: roomName,\n\t\t\tnickname: MyID,\n\t\t\tmsg: chatMessage,\n\t\t\tdate: new Date().toLocaleTimeString(),\n\t\t});\n\t\tsetChatMessage(\"\");\n\t};\n\n  const onChatMessageChange = (e:any) => {\n    setChatMessage(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className=\"ChatInput-form\" onSubmit={handleSubmit}>\n        <input type=\"text\" className=\"form-control\"\n          placeholder=\"Enter message\"\n          value={chatMessage}\n          onChange={onChatMessageChange}\n        ></input>\n        <Button type=\"button\" className=\"btn btn-sm\" onClick={handleSubmit}>send</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatInput;"]},"metadata":{},"sourceType":"module"}