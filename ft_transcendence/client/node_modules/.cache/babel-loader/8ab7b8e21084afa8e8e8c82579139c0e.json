{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport io from './PongSocket';\nlet t = 0;\n\nconst useCanvas = game => {\n  _s();\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas ? canvas.getContext('2d') : null;\n    let animationFrameID;\n    window.addEventListener('keydown', e => {\n      game.onKeyDown(e);\n    });\n    window.addEventListener('keyup', e => {\n      game.onKeyUp(e);\n    });\n    io.on('Up', e => {\n      game.onUp(e);\n    });\n    io.on('Down', e => {\n      game.onDown(e);\n    });\n    io.on('Stop', e => {\n      game.onStop(e);\n    });\n    io.on('Scored', e => {\n      game.onScored(e);\n    });\n    io.on('Update', e => {\n      game.onUpdate(e);\n    });\n\n    const render = () => {\n      let dt = (performance.now() - t) / 1000;\n      if (t === 0) t = performance.now();else {\n        t = performance.now();\n        game.draw(context, dt);\n      }\n      animationFrameID = window.requestAnimationFrame(render);\n    };\n\n    render();\n    return () => {\n      window.cancelAnimationFrame(animationFrameID);\n    };\n  }, [game]);\n  return canvasRef;\n};\n\n_s(useCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\nexport default useCanvas;","map":{"version":3,"sources":["/Users/sohndohyun/works/transcendence/client/src/Pong/CanvasHook.tsx"],"names":["useRef","useEffect","io","t","useCanvas","game","canvasRef","canvas","current","context","getContext","animationFrameID","window","addEventListener","e","onKeyDown","onKeyUp","on","onUp","onDown","onStop","onScored","onUpdate","render","dt","performance","now","draw","requestAnimationFrame","cancelAnimationFrame"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,EAAP,MAAe,cAAf;AAIA,IAAIC,CAAC,GAAG,CAAR;;AAEA,MAAMC,SAAS,GAAIC,IAAD,IAAgB;AAAA;;AAC9B,QAAMC,SAAS,GAAGN,MAAM,CAAoB,IAApB,CAAxB;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,UAAMC,OAAO,GAAGF,MAAM,GAAGA,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAH,GAA6B,IAAnD;AACA,QAAIC,gBAAJ;AAEAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAoCC,CAAD,IAAO;AAAET,MAAAA,IAAI,CAACU,SAAL,CAAeD,CAAf;AAAoB,KAAhE;AACAF,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAkCC,CAAD,IAAO;AAAET,MAAAA,IAAI,CAACW,OAAL,CAAaF,CAAb;AAAkB,KAA5D;AAEAZ,IAAAA,EAAE,CAACe,EAAH,CAAM,IAAN,EAAaH,CAAD,IAAc;AAAET,MAAAA,IAAI,CAACa,IAAL,CAAUJ,CAAV;AAAc,KAA1C;AACAZ,IAAAA,EAAE,CAACe,EAAH,CAAM,MAAN,EAAeH,CAAD,IAAc;AAAET,MAAAA,IAAI,CAACc,MAAL,CAAYL,CAAZ;AAAgB,KAA9C;AACAZ,IAAAA,EAAE,CAACe,EAAH,CAAM,MAAN,EAAeH,CAAD,IAAc;AAAET,MAAAA,IAAI,CAACe,MAAL,CAAYN,CAAZ;AAAgB,KAA9C;AACAZ,IAAAA,EAAE,CAACe,EAAH,CAAM,QAAN,EAAiBH,CAAD,IAAe;AAAET,MAAAA,IAAI,CAACgB,QAAL,CAAcP,CAAd;AAAkB,KAAnD;AACAZ,IAAAA,EAAE,CAACe,EAAH,CAAM,QAAN,EAAiBH,CAAD,IAAe;AAAET,MAAAA,IAAI,CAACiB,QAAL,CAAcR,CAAd;AAAkB,KAAnD;;AAEA,UAAMS,MAAM,GAAG,MAAM;AACjB,UAAIC,EAAE,GAAG,CAACC,WAAW,CAACC,GAAZ,KAAoBvB,CAArB,IAA0B,IAAnC;AACA,UAAIA,CAAC,KAAK,CAAV,EACIA,CAAC,GAAGsB,WAAW,CAACC,GAAZ,EAAJ,CADJ,KAEK;AACDvB,QAAAA,CAAC,GAAGsB,WAAW,CAACC,GAAZ,EAAJ;AACArB,QAAAA,IAAI,CAACsB,IAAL,CAAUlB,OAAV,EAAmBe,EAAnB;AACH;AACDb,MAAAA,gBAAgB,GAAGC,MAAM,CAACgB,qBAAP,CAA6BL,MAA7B,CAAnB;AACH,KATD;;AAUAA,IAAAA,MAAM;AAEN,WAAO,MAAM;AACTX,MAAAA,MAAM,CAACiB,oBAAP,CAA4BlB,gBAA5B;AACH,KAFD;AAGH,GA7BQ,EA6BN,CAACN,IAAD,CA7BM,CAAT;AAiCA,SAAOC,SAAP;AACH,CAtCD;;GAAMF,S;;AAwCN,eAAeA,SAAf","sourcesContent":["import { useRef, useEffect } from 'react';\nimport io from './PongSocket';\nimport Game, { Update } from './Game';\nimport { Scored, Moved } from './Game';\n\nlet t = 0;\n\nconst useCanvas = (game: Game) => {\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const context = canvas ? canvas.getContext('2d') : null;\n        let animationFrameID: number;\n\n        window.addEventListener('keydown', (e) => { game.onKeyDown(e); });\n        window.addEventListener('keyup', (e) => { game.onKeyUp(e); });\n\n        io.on('Up', (e: Moved) => { game.onUp(e) });\n        io.on('Down', (e: Moved) => { game.onDown(e) });\n        io.on('Stop', (e: Moved) => { game.onStop(e) });\n        io.on('Scored', (e: Scored) => { game.onScored(e) });\n        io.on('Update', (e: Update) => { game.onUpdate(e) });\n\n        const render = () => {\n            let dt = (performance.now() - t) / 1000;\n            if (t === 0)\n                t = performance.now();\n            else {\n                t = performance.now();\n                game.draw(context, dt);\n            }\n            animationFrameID = window.requestAnimationFrame(render);\n        }\n        render();\n\n        return () => {\n            window.cancelAnimationFrame(animationFrameID);\n        };\n    }, [game]);\n\n\n\n    return canvasRef;\n}\n\nexport default useCanvas;"]},"metadata":{},"sourceType":"module"}