{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/bye_blackhole/client/src/SideBar/SideBar.tsx\",\n    _s3 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport { useEffect, useState } from \"react\";\nimport \"./styles/SideBar.scss\";\nimport { findImg } from '../Images/Images';\nimport UserInfoModal from \"./UserInfoModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SideBar = () => {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const [MyID, setMyID] = useState('');\n  const [MyIcon, setMyIcon] = useState('');\n  useEffect(() => {\n    const id = sessionStorage.getItem('nickname');\n    const icon = sessionStorage.getItem('icon');\n    if (id) setMyID(id);\n    if (icon) setMyIcon(icon);\n  }); //UserInfoModal\n\n  const [TargetID, setTargetID] = useState('');\n  const [UserInfoModalState, setUserInfoModalState] = useState(true);\n\n  const openUserInfoModal = id => {\n    setUserInfoModalState(true);\n    setTargetID(id);\n  };\n\n  const closeUserInfoModal = () => {\n    setUserInfoModalState(false);\n  };\n\n  const fetcher = async url => {\n    const res = await axios.get(url);\n    return res.data;\n  };\n\n  const GetUserList = () => {\n    _s();\n\n    const {\n      data,\n      error\n    } = useSwr('/Lobby/userList/' + MyID, fetcher);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"# friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 4\n      }, this), data === null || data === void 0 ? void 0 : data.map(user => user.isFriend ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"user-btn\",\n        onClick: () => openUserInfoModal(user.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: findImg(user.icon),\n          width: \"20\",\n          height: \"20\",\n          className: \"user-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this), user.state === \"online\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userState online\",\n          children: \"\\xB7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this) : null, user.state === \"offline\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userState offline\",\n          children: \"\\xB7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 34\n        }, this) : null, user.state === \"gaming\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userState gaming\",\n          children: \"\\xB7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }, this) : null, user.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this) : null), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"# others\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }, this), data === null || data === void 0 ? void 0 : data.map(user => user.isFriend ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"user-btn\",\n        onClick: () => openUserInfoModal(user.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: findImg(user.icon),\n          width: \"20\",\n          height: \"20\",\n          className: \"user-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), user.state === \"online\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userState online\",\n          children: \"\\xB7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }, this) : null, user.state === \"offline\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userState offline\",\n          children: \"\\xB7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 34\n        }, this) : null, user.state === \"gaming\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userState gaming\",\n          children: \"\\xB7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }, this) : null, user.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this))]\n    }, void 0, true);\n  };\n\n  _s(GetUserList, \"F8d8ME4pqhgmAA+XoM3jk8fet64=\", false, function () {\n    return [useSwr];\n  });\n\n  const GetChatList = () => {\n    _s2();\n\n    const {\n      data,\n      error\n    } = useSwr('/Lobby/myChatList/' + MyID, fetcher);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"# my chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 4\n      }, this), data === null || data === void 0 ? void 0 : data.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"chat-btn\",\n          onClick: () => {\n            document.location.href = '/Chat';\n            sessionStorage.setItem('roomName', chat.id);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chatNum\",\n            children: chat.num\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\xA0\", chat.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"chatLeave\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this))]\n    }, void 0, true);\n  };\n\n  _s2(GetChatList, \"F8d8ME4pqhgmAA+XoM3jk8fet64=\", false, function () {\n    return [useSwr];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"MyID\",\n        children: MyID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"myIcon\",\n        onClick: () => openUserInfoModal(MyID),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: findImg(MyIcon),\n          width: \"30\",\n          height: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: [GetUserList, GetChatList, /*#__PURE__*/_jsxDEV(UserInfoModal, {\n        open: UserInfoModalState,\n        close: closeUserInfoModal,\n        myID: MyID,\n        targetID: TargetID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 2\n  }, this);\n};\n\n_s3(SideBar, \"/Ck0pA0aXKhqPmRDfQA3O2NZYtY=\");\n\n_c = SideBar;\nexport default SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/client/src/SideBar/SideBar.tsx"],"names":["axios","useSwr","useEffect","useState","findImg","UserInfoModal","SideBar","MyID","setMyID","MyIcon","setMyIcon","id","sessionStorage","getItem","icon","TargetID","setTargetID","UserInfoModalState","setUserInfoModalState","openUserInfoModal","closeUserInfoModal","fetcher","url","res","get","data","GetUserList","error","map","user","isFriend","state","GetChatList","chat","document","location","href","setItem","num"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAO,uBAAP;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAAA;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMS,EAAE,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX;AACA,UAAMC,IAAI,GAAGF,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAb;AACA,QAAIF,EAAJ,EAAQH,OAAO,CAACG,EAAD,CAAP;AACR,QAAIG,IAAJ,EAAUJ,SAAS,CAACI,IAAD,CAAT;AACV,GALQ,CAAT,CAJqB,CAWrB;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,kBAAD,EAAqBC,qBAArB,IAA8Cf,QAAQ,CAAC,IAAD,CAA5D;;AACA,QAAMgB,iBAAiB,GAAIR,EAAD,IAAe;AACxCO,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAF,IAAAA,WAAW,CAACL,EAAD,CAAX;AACA,GAHD;;AAIA,QAAMS,kBAAkB,GAAG,MAAM;AAChCF,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA,GAFD;;AAKA,QAAMG,OAAO,GAAG,MAAOC,GAAP,IAAsB;AACrC,UAAMC,GAAG,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAUF,GAAV,CAAlB;AACA,WAAOC,GAAG,CAACE,IAAX;AACA,GAHD;;AAKA,QAAMC,WAAW,GAAG,MAAM;AAAA;;AACzB,UAAM;AAACD,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAgB1B,MAAM,CAA6D,qBAAqBM,IAAlF,EAAwFc,OAAxF,CAA5B;AACA,wBACA;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEEI,IAFF,aAEEA,IAFF,uBAEEA,IAAI,CAAEG,GAAN,CAAUC,IAAI,IAAGA,IAAI,CAACC,QAAL,gBACjB;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,UAAhC;AAA2C,QAAA,OAAO,EAAE,MAAMX,iBAAiB,CAACU,IAAI,CAAClB,EAAN,CAA3E;AAAA,gCACC;AAAK,UAAA,GAAG,EAAEP,OAAO,CAACyB,IAAI,CAACf,IAAN,CAAjB;AAA+B,UAAA,KAAK,EAAC,IAArC;AAA0C,UAAA,MAAM,EAAC,IAAjD;AAAsD,UAAA,SAAS,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEe,IAAI,CAACE,KAAL,KAAe,QAAf,gBAA0B;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1B,GAAwE,IAF1E,EAGEF,IAAI,CAACE,KAAL,KAAe,SAAf,gBAA2B;AAAM,UAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3B,GAA0E,IAH5E,EAIEF,IAAI,CAACE,KAAL,KAAe,QAAf,gBAA0B;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1B,GAAwE,IAJ1E,EAKEF,IAAI,CAAClB,EALP;AAAA;AAAA;AAAA;AAAA;AAAA,cADiB,GAQf,IARF,CAFF,eAYC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZD,EAaEc,IAbF,aAaEA,IAbF,uBAaEA,IAAI,CAAEG,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,QAAL,GAAgB,IAAhB,gBAClB;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,UAAhC;AAA2C,QAAA,OAAO,EAAE,MAAMX,iBAAiB,CAACU,IAAI,CAAClB,EAAN,CAA3E;AAAA,gCACC;AAAK,UAAA,GAAG,EAAEP,OAAO,CAACyB,IAAI,CAACf,IAAN,CAAjB;AAA+B,UAAA,KAAK,EAAC,IAArC;AAA0C,UAAA,MAAM,EAAC,IAAjD;AAAsD,UAAA,SAAS,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEe,IAAI,CAACE,KAAL,KAAe,QAAf,gBAA0B;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1B,GAAwE,IAF1E,EAGEF,IAAI,CAACE,KAAL,KAAe,SAAf,gBAA2B;AAAM,UAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3B,GAA0E,IAH5E,EAIEF,IAAI,CAACE,KAAL,KAAe,QAAf,gBAA0B;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1B,GAAwE,IAJ1E,EAKEF,IAAI,CAAClB,EALP;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAbF;AAAA,oBADA;AAyBA,GA3BD;;AA5BqB,KA4Bfe,WA5Be;AAAA,YA6BEzB,MA7BF;AAAA;;AAyDrB,QAAM+B,WAAW,GAAG,MAAM;AAAA;;AACzB,UAAM;AAACP,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAgB1B,MAAM,CAA6B,uBAAuBM,IAApD,EAA0Dc,OAA1D,CAA5B;AACA,wBACA;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEEI,IAFF,aAEEA,IAFF,uBAEEA,IAAI,CAAEG,GAAN,CAAUK,IAAI,iBACd;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACC;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,UAAhC;AAA2C,UAAA,OAAO,EAAE,MAAM;AACxDC,YAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,OAAzB;AACAxB,YAAAA,cAAc,CAACyB,OAAf,CAAuB,UAAvB,EAAmCJ,IAAI,CAACtB,EAAxC;AACA,WAHF;AAAA,kCAIC;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA,sBAA2BsB,IAAI,CAACK;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAJD,eAKC;AAAA,+BAAaL,IAAI,CAACtB,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBALD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAQC;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARD;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAFF;AAAA,oBADA;AAiBA,GAnBD;;AAzDqB,MAyDfqB,WAzDe;AAAA,YA0DE/B,MA1DF;AAAA;;AA+ErB,sBACA;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACC;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,kBAAwBM;AAAxB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,QAAhC;AAAyC,QAAA,OAAO,EAAE,MAAMY,iBAAiB,CAACZ,IAAD,CAAzE;AAAA,+BACC;AAAK,UAAA,GAAG,EAAEH,OAAO,CAACK,MAAD,CAAjB;AAA2B,UAAA,KAAK,EAAC,IAAjC;AAAsC,UAAA,MAAM,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAOC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBACEiB,WADF,EAEEM,WAFF,eAIC,QAAC,aAAD;AAAe,QAAA,IAAI,EAAEf,kBAArB;AAAyC,QAAA,KAAK,EAAEG,kBAAhD;AAAoE,QAAA,IAAI,EAAEb,IAA1E;AAAgF,QAAA,QAAQ,EAAEQ;AAA1F;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAgBA,CA/FD;;IAAMT,O;;KAAAA,O;AAgGN,eAAeA,OAAf","sourcesContent":["import axios from \"axios\";\nimport useSwr from 'swr';\nimport {useEffect, useState} from \"react\";\nimport \"./styles/SideBar.scss\"\nimport {findImg} from '../Images/Images'\nimport UserInfoModal from \"./UserInfoModal\";\n\nconst SideBar = () => {\n\tconst [MyID, setMyID] = useState('')\n\tconst [MyIcon, setMyIcon] = useState('')\n\t\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst icon = sessionStorage.getItem('icon')\n\t\tif (id) setMyID(id)\n\t\tif (icon) setMyIcon(icon)\n\t})\n\t\n\t//UserInfoModal\n\tconst [TargetID, setTargetID] = useState('');\n\tconst [UserInfoModalState, setUserInfoModalState] = useState(true);\n\tconst openUserInfoModal = (id:string) => {\n\t\tsetUserInfoModalState(true);\n\t\tsetTargetID(id);\n\t}\n\tconst closeUserInfoModal = () => {\n\t\tsetUserInfoModalState(false);\n\t}\n\n\t\n\tconst fetcher = async (url:string) => {\n\t\tconst res = await axios.get(url)\n\t\treturn res.data;\n\t}\n\n\tconst GetUserList = () => {\n\t\tconst {data, error} = useSwr<{id:string, icon:string, state:string, isFriend:boolean}[]>('/Lobby/userList/' + MyID, fetcher)\n\t\treturn (\n\t\t<>\n\t\t\t<div className=\"title\"># friends</div>\n\t\t\t{data?.map(user=> user.isFriend ?\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"online\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"offline\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t\t: null\n\t\t\t)}\n\t\t\t<div className=\"title\"># others</div>\n\t\t\t{data?.map(user => user.isFriend ? null :\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"online\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"offline\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</>\n\t\t)\n\t}\n\n\tconst GetChatList = () => {\n\t\tconst {data, error} = useSwr<{id:string, num: number}[]>('/Lobby/myChatList/' + MyID, fetcher)\n\t\treturn (\n\t\t<>\n\t\t\t<div className=\"title\"># my chats</div>\n\t\t\t{data?.map(chat=>\n\t\t\t\t<div className=\"chat\">\n\t\t\t\t\t<button type=\"button\" className=\"chat-btn\" onClick={() => {\n\t\t\t\t\t\t\tdocument.location.href = '/Chat';\n\t\t\t\t\t\t\tsessionStorage.setItem('roomName', chat.id);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<span className=\"chatNum\">{chat.num}</span>\n\t\t\t\t\t\t<span>&nbsp;{chat.id}</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button type=\"button\" className=\"chatLeave\">X</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t\t)\n\t}\n\t\n\t\n\treturn(\n\t<aside>\n\t\t<div className=\"top\">\n\t\t\t<span className=\"MyID\">{MyID}</span>\n\t\t\t<button type=\"button\" className=\"myIcon\" onClick={() => openUserInfoModal(MyID)}>\n\t\t\t\t<img src={findImg(MyIcon)} width=\"30\" height=\"30\"></img>\n\t\t\t</button>\n\t\t</div>\n\t\t<div className=\"bottom\">\n\t\t\t{GetUserList}\n\t\t\t{GetChatList}\n\n\t\t\t<UserInfoModal open={UserInfoModalState} close={closeUserInfoModal} myID={MyID} targetID={TargetID}/>\n\t\t</div>\n\t</aside>\n\t)\n}\nexport default SideBar;"]},"metadata":{},"sourceType":"module"}