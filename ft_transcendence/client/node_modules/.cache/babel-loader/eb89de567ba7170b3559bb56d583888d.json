{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/jin_bye/client/src/Lobby/ChatList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport lock from '../Images/lock.png';\nimport unlock from '../Images/unlock.png';\nimport \"./styles/ChatList.scss\";\nimport PwdCheckModal from \"./PwdCheckModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatList = props => {\n  _s();\n\n  const {\n    MyID\n  } = props;\n\n  const fetcher = async url => {\n    const res = await axios.get(url);\n    return res.data;\n  };\n\n  const {\n    data,\n    error\n  } = useSwr('Lobby/chatList', fetcher);\n  const [ClickedRoomTitle, setClickedRoomTitle] = useState('');\n  const [PwdCheckModalState, setPwdCheckModalState] = useState(false);\n\n  const openPwdCheckModal = title => {\n    setPwdCheckModalState(true);\n    setClickedRoomTitle(title);\n  };\n\n  const closePwdCheckModal = () => {\n    setPwdCheckModalState(false);\n  };\n\n  async function enterPublicRoom(title) {\n    await axios.post('/Lobby/enter', {\n      title: title,\n      id: MyID,\n      password: ''\n    });\n    document.location.href = '/chat';\n    sessionStorage.setItem('roomName', title);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [data === null || data === void 0 ? void 0 : data.map(chatRoom => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"chatList\",\n      onClick: () => {\n        if (chatRoom.security === 'protected') openPwdCheckModal(chatRoom.title);else enterPublicRoom(chatRoom.title);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chatList-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatList-num\",\n          children: chatRoom.num\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"lock\",\n        children: chatRoom.security != \"protected\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: unlock,\n          width: \"20\",\n          height: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: lock,\n          width: \"20\",\n          height: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 86\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"roomName\",\n        children: chatRoom.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this)), /*#__PURE__*/_jsxDEV(PwdCheckModal, {\n      open: PwdCheckModalState,\n      close: closePwdCheckModal,\n      chatRoomID: ClickedRoomTitle,\n      MyID: MyID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatList, \"Oav3iSBbfK45MtGzc8iSadKdVRw=\", false, function () {\n  return [useSwr];\n});\n\n_c = ChatList;\nexport default ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"sources":["/Users/jinkim/jin_bye/client/src/Lobby/ChatList.tsx"],"names":["useState","axios","useSwr","lock","unlock","PwdCheckModal","ChatList","props","MyID","fetcher","url","res","get","data","error","ClickedRoomTitle","setClickedRoomTitle","PwdCheckModalState","setPwdCheckModalState","openPwdCheckModal","title","closePwdCheckModal","enterPublicRoom","post","id","password","document","location","href","sessionStorage","setItem","map","chatRoom","security","num"],"mappings":"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","sourcesContent":["import {useEffect, useState, useCallback} from \"react\";\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport lock from '../Images/lock.png'\nimport unlock from '../Images/unlock.png'\nimport \"./styles/ChatList.scss\"\nimport PwdCheckModal from \"./PwdCheckModal\";\n\nconst ChatList = (props: any) => {\n\tconst {MyID} = props\n\n\tconst fetcher = async (url:string) => {\n\t\tconst res = await axios.get(url)\n\t\treturn res.data;\n\t}\n\n\tconst {data, error} = useSwr<{title:string, num:number, security:string}[]>('Lobby/chatList', fetcher)\n\n\tconst [ClickedRoomTitle, setClickedRoomTitle] = useState('')\n\tconst [PwdCheckModalState, setPwdCheckModalState] = useState(false);\n\n\tconst openPwdCheckModal = (title:string) => {\n\t\tsetPwdCheckModalState(true);\n\t\tsetClickedRoomTitle(title)\n\t}\n\tconst closePwdCheckModal = () => {\n\t\tsetPwdCheckModalState(false);\n\t}\n\n\tasync function enterPublicRoom(title:string) {\n\t\tawait axios.post('/Lobby/enter', {title:title, id:MyID, password:''})\n\t\tdocument.location.href = '/chat'\n\t\tsessionStorage.setItem('roomName', title)\n\t}\n\n\treturn (\n\t<>\n\t{data?.map(chatRoom=>\n\t\t<button type=\"button\" className=\"chatList\" onClick={() => {\n\t\t\tif (chatRoom.security === 'protected')\n\t\t\t\topenPwdCheckModal(chatRoom.title)\n\t\t\telse\n\t\t\t\tenterPublicRoom(chatRoom.title)\n\t\t}}>\n\t\t\t<span className=\"chatList-left\">\n\t\t\t\t<div className=\"chatList-num\">{chatRoom.num}</div>\n\t\t\t</span>\n\t\t\t<span className=\"lock\">\n\t\t\t\t{chatRoom.security != \"protected\" ? <img src={unlock} width=\"20\" height=\"20\"/> : <img src={lock} width=\"20\" height=\"20\"/>}\n\t\t\t</span>\n\t\t\t<span className=\"roomName\">\n\t\t\t\t{chatRoom.title}\n\t\t\t</span>\n\n\t\t</button>\n\t)}\n\t<PwdCheckModal open={PwdCheckModalState} close={closePwdCheckModal} chatRoomID={ClickedRoomTitle} MyID={MyID} />\n\t</>\n\t)\n}\n\nexport default ChatList"]},"metadata":{},"sourceType":"module"}