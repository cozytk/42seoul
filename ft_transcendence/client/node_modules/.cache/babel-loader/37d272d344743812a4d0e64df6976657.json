{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/bye_blackhole/client/src/Chat/ChatLog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/ChatLog.scss\";\nimport { findImg } from '../Images/Images';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatLog = ({\n  socket\n}) => {\n  _s();\n\n  const [msgList, setMsgList] = useState([{\n    userName: 'jinkim',\n    icon: 'gamer_boy',\n    msg: 'hello',\n    timeStamp: '2021-01-01 00:00'\n  }, {\n    myMsg: 'mymsgworlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf',\n    timeStamp: '2021-01-01 00:00'\n  }, {\n    sysMsg: 'sysMsg님이 입장했습니다'\n  }, {\n    userName: '2222',\n    icon: 'gamer_girl',\n    msg: 'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf',\n    timeStamp: '2021-01-01 00:00'\n  }, {\n    myMsg: 'mymsg',\n    timeStamp: '2021-01-01 00:00'\n  }, {\n    myMsg: 'mymsgworlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf',\n    timeStamp: '2021-01-01 00:00'\n  }, {\n    userName: '2222',\n    icon: 'gamer_girl',\n    msg: 'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf',\n    timeStamp: '2021-01-01 00:00'\n  }, {\n    userName: '2222',\n    icon: 'gamer_girl',\n    msg: 'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf',\n    timeStamp: '2021-01-01 00:00'\n  }, {\n    userName: '2222',\n    icon: 'gamer_girl',\n    msg: 'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf',\n    timeStamp: '2021-01-01 00:00'\n  }, {\n    userName: '2222',\n    icon: 'gamer_girl',\n    msg: 'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf',\n    timeStamp: '2021-01-01 00:00'\n  }, {\n    userName: '2222',\n    icon: 'gamer_girl',\n    msg: 'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf',\n    timeStamp: '2021-01-01 00:00'\n  }, {\n    userName: '2222',\n    icon: 'gamer_girl',\n    msg: 'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf',\n    timeStamp: '2021-01-01 00:00'\n  }, {\n    userName: '2222',\n    icon: 'gamer_girl',\n    msg: 'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf',\n    timeStamp: '2021-01-01 00:00'\n  }, {\n    userName: '2222',\n    icon: 'gamer_girl',\n    msg: 'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf',\n    timeStamp: '2021-01-01 00:00'\n  }]);\n  const [MyID, setMyID] = useState('');\n  const [roomName, setRoomName] = useState('');\n  useEffect(() => {\n    const id = sessionStorage.getItem('nickname');\n    const room = sessionStorage.getItem('roomName');\n    if (id) setMyID(id);\n    if (room) setRoomName(room);\n    socket.on(\"onReceive\", async messageItem => {\n      if (MyID === messageItem.userName) setMsgList(msgList => [...msgList, {\n        myMsg: messageItem.msg,\n        timeStamp: messageItem.timeStamp\n      }]);else setMsgList(msgList => [...msgList, messageItem]);\n      await axios.post('/chat/' + roomName, {\n        id: messageItem.userName,\n        timeStamp: messageItem.timeStamp,\n        content: messageItem.msg\n      });\n    });\n    socket.on(\"onConnect\", async systemMessage => {\n      setMsgList(msgList => [...msgList, {\n        sysMsg: systemMessage\n      }]);\n      await axios.post('/chat/' + roomName, {\n        sysMsg: systemMessage\n      });\n    });\n    socket.on(\"onDisconnect\", async systemMessage => {\n      setMsgList(msgList => [...msgList, {\n        sysMsg: systemMessage\n      }]);\n      await axios.post('/chat/' + roomName, {\n        sysMsg: systemMessage\n      });\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: msgList.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [msg.msg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msgLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: findImg(msg.icon),\n            width: \"30\",\n            height: \"30\",\n            className: \"msg-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [msg.userName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-userName\",\n            children: msg.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-left\",\n            children: msg.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"msg-timeStamp\",\n          children: [\"(\", msg.timeStamp, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), msg.myMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msgRight\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"msg-right\",\n          children: msg.myMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"msg-timeStamp\",\n          children: [\"(\", msg.timeStamp, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sysMsg\",\n        children: msg.sysMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 2\n  }, this);\n};\n\n_s(ChatLog, \"r0vdvVQNBwLCeGWeMhU+PPizZoI=\");\n\n_c = ChatLog;\nexport default ChatLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatLog\");","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/client/src/Chat/ChatLog.tsx"],"names":["React","useEffect","useState","findImg","axios","ChatLog","socket","msgList","setMsgList","userName","icon","msg","timeStamp","myMsg","sysMsg","MyID","setMyID","roomName","setRoomName","id","sessionStorage","getItem","room","on","messageItem","post","content","systemMessage","disconnect","map","idx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./styles/ChatLog.scss\";\nimport {findImg} from '../Images/Images'\nimport axios from \"axios\";\n\nconst ChatLog = ({socket}: any) => {\n\tconst [msgList, setMsgList] = useState<any[]>([{userName:'jinkim', icon:'gamer_boy', msg:'hello', timeStamp:'2021-01-01 00:00'}, {myMsg:'mymsgworlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {sysMsg:'sysMsg님이 입장했습니다'},{userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {myMsg:'mymsg', timeStamp:'2021-01-01 00:00'},{myMsg:'mymsgworlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}]);\n\n\tconst [MyID, setMyID] = useState('')\n\tconst [roomName, setRoomName] = useState('')\n\t\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst room = sessionStorage.getItem('roomName')\n\t\tif (id) setMyID(id)\n\t\tif (room) setRoomName(room)\n\n\n\t\tsocket.on(\"onReceive\", async(messageItem: {userName:string, msg:string, timeStamp:string}) => {\n\t\t\tif (MyID === messageItem.userName)\n\t\t\t\tsetMsgList((msgList) => [...msgList, {myMsg: messageItem.msg, timeStamp: messageItem.timeStamp} as never]);\n\t\t\telse\n\t\t\t\tsetMsgList((msgList) => [...msgList, messageItem]);\n\n\t\t\tawait axios.post('/chat/' + roomName, {id:messageItem.userName, timeStamp:messageItem.timeStamp, content:messageItem.msg})\n\t\t\t\n\t\t});\n\t\tsocket.on(\"onConnect\", async (systemMessage: string) => {\n\t\t\tsetMsgList((msgList) => [...msgList, { sysMsg: systemMessage } as never]);\n\t\t\t\n\t\t\tawait axios.post('/chat/' + roomName, {sysMsg: systemMessage})\n\t\t});\n\t\tsocket.on(\"onDisconnect\", async(systemMessage: any) => {\n\t\t\tsetMsgList((msgList) => [...msgList, { sysMsg: systemMessage } as never]);\n\n\t\t\tawait axios.post('/chat/' + roomName, {sysMsg: systemMessage})\n\t\t});\n\t\treturn () => {\n\t\t\tsocket.disconnect();\n\t\t};\n\t}, [socket]);\n\n\treturn (\n\t<div>\n\t\t{msgList.map((msg, idx) => (\n\t\t<div key={idx}>\n\t\t\t{msg.msg &&\n\t\t\t\t<div className=\"msgLeft\">\n\t\t\t\t\t<span><img src={findImg(msg.icon)}  width=\"30\" height=\"30\" className=\"msg-icon\"/></span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{msg.userName && <div className=\"msg-userName\">{msg.userName}</div>}\n\t\t\t\t\t\t<div className=\"msg-left\">{msg.msg}</div>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.timeStamp})</span>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{msg.myMsg &&\n\t\t\t\t<div className=\"msgRight\">\n\t\t\t\t\t<span className=\"msg-right\">{msg.myMsg}</span>\n\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.timeStamp})</span>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t<div className=\"sysMsg\" >{msg.sysMsg}</div>\n\t\t</div>\n\t\t))}\n\t</div>\n\t);\n};\n\nexport default ChatLog;"]},"metadata":{},"sourceType":"module"}