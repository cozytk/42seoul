#include "AssaultTerminator.hpp"
#include "ISpaceMarine.hpp"

/* ************************************************************************** */
/* ---------------------------- STATIC VARIABLE ----------------------------- */
/* ************************************************************************** */

/* static variable code */

/* ************************************************************************** */
/* ------------------------------ CONSTRUCTOR ------------------------------- */
/* ************************************************************************** */

AssaultTerminator::AssaultTerminator()
{
	std::cout << "* teleports from space *\n";
}

AssaultTerminator::AssaultTerminator(const AssaultTerminator& copy)
{
	(void)copy;
	std::cout << "* teleports from space *\n";
}

/* ************************************************************************** */
/* ------------------------------- DESTRUCTOR ------------------------------- */
/* ************************************************************************** */

AssaultTerminator::~AssaultTerminator()
{
	std::cout << "I'll be back..\n";
}

/* ************************************************************************** */
/* -------------------------------- OVERLOAD -------------------------------- */
/* ************************************************************************** */

AssaultTerminator& AssaultTerminator::operator=(const AssaultTerminator& obj)
{
	if (this == &obj)
		return (*this);
	*this = obj;
	return (*this);
}

ISpaceMarine*
AssaultTerminator::clone() const {
	AssaultTerminator *copy = new AssaultTerminator(*this);
	return (copy);
}

void
AssaultTerminator::battleCry() const {
	std::cout << "This code is unclean. PURIFY IT!\n";
}

void
AssaultTerminator::rangedAttack() const {
	std::cout << "* does nothing *\n";
}

void
AssaultTerminator::meleeAttack() const {
	std::cout << "* attacks with chainfists *\n";
}
/* ************************************************************************** */
/* --------------------------------- GETTER --------------------------------- */
/* ************************************************************************** */

/* getter code */

/* ************************************************************************** */
/* --------------------------------- SETTER --------------------------------- */
/* ************************************************************************** */

/* setter code */

/* ************************************************************************** */
/* ------------------------------- EXCEPTION -------------------------------- */
/* ************************************************************************** */

/* exception code */

/* ************************************************************************** */
/* ---------------------------- MEMBER FUNCTION ----------------------------- */
/* ************************************************************************** */

