#include "AWeapon.hpp"

/* ************************************************************************** */
/* ---------------------------- STATIC VARIABLE ----------------------------- */
/* ************************************************************************** */

/* static variable code */

/* ************************************************************************** */
/* ------------------------------ CONSTRUCTOR ------------------------------- */
/* ************************************************************************** */

AWeapon::AWeapon(){}
AWeapon::AWeapon(std::string const & name, int apcost, int damage)
: name(name), apcost(apcost), damage(damage)
{
}

AWeapon::AWeapon(const AWeapon& copy)
: name(copy.name), apcost(copy.apcost), damage(copy.damage)
{
}

/* ************************************************************************** */
/* ------------------------------- DESTRUCTOR ------------------------------- */
/* ************************************************************************** */

AWeapon::~AWeapon()
{
}

/* ************************************************************************** */
/* -------------------------------- OVERLOAD -------------------------------- */
/* ************************************************************************** */

AWeapon& AWeapon::operator=(const AWeapon& obj)
{
	if (this == &obj)
		return (*this);
	name = obj.name;
	apcost = obj.apcost;
	damage = obj.damage;
	return (*this);
}

/* ************************************************************************** */
/* --------------------------------- GETTER --------------------------------- */
/* ************************************************************************** */

std::string AWeapon::getName() const
{
	return (name);
}

int AWeapon::getAPCost() const
{
	return (apcost);
}

int AWeapon::getDamage() const
{
	return (damage);
}

/* ************************************************************************** */
/* --------------------------------- SETTER --------------------------------- */
/* ************************************************************************** */

/* setter code */

/* ************************************************************************** */
/* ------------------------------- EXCEPTION -------------------------------- */
/* ************************************************************************** */

/* exception code */

/* ************************************************************************** */
/* ---------------------------- MEMBER FUNCTION ----------------------------- */
/* ************************************************************************** */

/*
 * A weapon produces certain sounds and lighting effects when you attack() with it. This will be deferred to the inheriting classes.
 */

void AWeapon::attack() const
{
}
