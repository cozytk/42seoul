#include "AMateria.hpp"

/* ************************************************************************** */
/* ---------------------------- STATIC VARIABLE ----------------------------- */
/* ************************************************************************** */

/* static variable code */

/* ************************************************************************** */
/* ------------------------------ CONSTRUCTOR ------------------------------- */
/* ************************************************************************** */

AMateria::AMateria()
: _type(0), _xp(0)
{

}

AMateria::AMateria(std::string const & type)
: _type(type), _xp(0)
{

}

AMateria::AMateria(const AMateria& copy)
: _type(copy._type), _xp(copy._xp)
{
}

/* ************************************************************************** */
/* ------------------------------- DESTRUCTOR ------------------------------- */
/* ************************************************************************** */

AMateria::~AMateria()
{
}

/* ************************************************************************** */
/* -------------------------------- OVERLOAD -------------------------------- */
/* ************************************************************************** */

AMateria& AMateria::operator=(const AMateria& obj)
{
	if (this == &obj)
		return (*this);
	_xp = obj._xp;
	_type = obj._type;
	return (*this);
}

/* ************************************************************************** */
/* --------------------------------- GETTER --------------------------------- */
/* ************************************************************************** */

std::string const & AMateria::getType() const
{
	return (_type);
}

unsigned int AMateria::getXP() const
{
	return (_xp);
}

/* ************************************************************************** */
/* --------------------------------- SETTER --------------------------------- */
/* ************************************************************************** */

/* setter code */

/* ************************************************************************** */
/* ------------------------------- EXCEPTION -------------------------------- */
/* ************************************************************************** */

/* exception code */

/* ************************************************************************** */
/* ---------------------------- MEMBER FUNCTION ----------------------------- */
/* ************************************************************************** */

void AMateria::use(ICharacter& target)
{
	(void)target;
	_xp += 10;
}
