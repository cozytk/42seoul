#include "Fixed.hpp"

/* ************************************************************************** */
/* ---------------------------- STATIC VARIABLE ----------------------------- */
/* ************************************************************************** */

/* static variable code */

/* ************************************************************************** */
/* ------------------------------ CONSTRUCTOR ------------------------------- */
/* ************************************************************************** */
Fixed::Fixed() : val(0)
{
	std::cout << "default constructor called\n";
}

Fixed::Fixed(const Fixed& copy)
{
	std::cout << "copy constructor called\n";
	val = copy.getRawBits();
	// *this = copy;
}

Fixed::Fixed(int const val)
{
	std::cout << "Int constructor called" << std::endl;
	this->val = val << bits;
}

Fixed::Fixed(float const val)
{
	std::cout << "Float constructor called" << std::endl;
	this->val = roundf(val*(1 << bits));
}

/* ************************************************************************** */
/* ------------------------------- DESTRUCTOR ------------------------------- */
/* ************************************************************************** */
Fixed::~Fixed()
{
	std::cout<<"Destructor called\n";
}

/* ************************************************************************** */
/* -------------------------------- OVERLOAD -------------------------------- */
/* ************************************************************************** */

Fixed& Fixed::operator=(const Fixed& obj)
{
	if (this == &obj)
		return (*this);
	std::cout<<"Assignation operator called\n";
	val = obj.getRawBits();
	return (*this);
}
std::ostream& operator<<(std::ostream &os, const Fixed &ref)
{
	return (os<<ref.toFloat());
}

/* ************************************************************************** */
/* --------------------------------- GETTER --------------------------------- */
/* ************************************************************************** */

int     Fixed::getRawBits(void) const
{
	std::cout << "getRawBits member function called\n";
	return (val);
}

/* ************************************************************************** */
/* --------------------------------- SETTER --------------------------------- */
/* ************************************************************************** */

void    Fixed::setRawBits(int const _val)
{
	val = _val;
}

/* ************************************************************************** */
/* ------------------------------- EXCEPTION -------------------------------- */
/* ************************************************************************** */

/* exception code */

/* ************************************************************************** */
/* ---------------------------- MEMBER FUNCTION ----------------------------- */
/* ************************************************************************** */
int     Fixed::toInt(void) const
{
	return (val>>bits);
}

float   Fixed::toFloat(void) const
{
	return ((float)val/(1<<bits));
}

